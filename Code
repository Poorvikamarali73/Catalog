#include <stdio.h>
#include <stdlib.h>
#include <string.h>
#include <math.h>

long long decodeY(char *value, int base) {
    return strtoll(value, NULL, base);
}

long long lagrangeInterpolation(int x[], long long y[], int k) {
    long long result = 0;
    
    for (int i = 0; i < k; i++) {
        long long term = y[i];
        
        for (int j = 0; j < k; j++) {
            if (i != j) {
                term *= (-x[j]);
                term /= (x[i] - x[j]);
            }
        }
        
        result += term;
    }
    
    return result;
}

int isPointValid(int x[], long long y[], int k, int testX, long long testY) {
    long long interpolatedY = lagrangeInterpolation(x, y, k);
    return (interpolatedY == testY);
}

int main() {
    int x1[] = {1, 2, 3, 6};
    char *yEnc1[] = {"4", "111", "12", "213"};
    int base1[] = {10, 2, 10, 4};
    int k1 = 3;
    
    long long y1[4];
    for (int i = 0; i < 4; i++) {
        y1[i] = decodeY(yEnc1[i], base1[i]);
    }
    
    long long secret1 = lagrangeInterpolation(x1, y1, k1);
    printf("Output for testcase 1: %lld\n", secret1);

    int x2[] = {1, 2, 3, 4, 5, 6, 7, 8, 9};
    char *yEnc2[] = {
        "28735619723837", "1A228867F0CA", "32811A4AA0B7B", "917978721331A",
        "1A22886782E1", "28735619654702", "71AB5070CC4B", "122662581541670", "642121030037605"
    };
    int base2[] = {10, 16, 12, 11, 16, 10, 14, 9, 8};
    int k2 = 6;
    
    long long y2[9];
    for (int i = 0; i < 9; i++) {
        y2[i] = decodeY(yEnc2[i], base2[i]);
    }
    
    long long secret2 = lagrangeInterpolation(x2, y2, k2);
    printf("Output for testcase 2: %lld\n", secret2);
 
    printf("Wrong points in testcase 2 in (x, y) format:\n");
    for (int i = 0; i < 9; i++) {
        if (!isPointValid(x2, y2, k2, x2[i], y2[i])) {
            printf("(%d, %lld)\n", x2[i], y2[i]);
        }
    }
    
    return 0;
}
